import { io } from "std:io";

/**
 * This example showcases how to evaluate expressions and match the result with various patterns,
 * offering a concise and readable alternative to multiple if-else statements. The match expression
 * can directly return values in simple cases or execute code blocks for more complex logic, maintaining
 * type consistency across different branches. Conditional patterns are supported using 'when',
 * adding flexibility for pattern matching with additional criteria. This approach simplifies handling
 * multiple conditions and patterns, enhancing code clarity and expressiveness.
 */
function main(): void {
  let name: string = "John";
  let age: i64 = 20;

  let message: string = match (name) {
    "John" -> "Hi John!",
    "Mary" -> { return "Hi Mary!"; },
    n -> "Hi " + n + "!",
  };

  match (age) {
    n when age == 20 -> io::println("You are 20 years old!"),
    n when age < 20 -> io::println("You are younger than 20!"),
    _ -> io::println("You are older than 20!"),
  };

  io::println(message);
}
